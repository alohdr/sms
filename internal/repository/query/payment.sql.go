// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.13.0
// source: payment.sql

package query

import (
	"context"
)

const getMakingPayment = `-- name: GetMakingPayment :many
SELECT bank_code, type, description FROM making_payment WHERE bank_code = ?
`

type GetMakingPaymentRow struct {
	BankCode    string `json:"bank_code"`
	Type        string `json:"type"`
	Description string `json:"description"`
}

func (q *Queries) GetMakingPayment(ctx context.Context, bankCode string) ([]*GetMakingPaymentRow, error) {
	rows, err := q.db.QueryContext(ctx, getMakingPayment, bankCode)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []*GetMakingPaymentRow
	for rows.Next() {
		var i GetMakingPaymentRow
		if err := rows.Scan(&i.BankCode, &i.Type, &i.Description); err != nil {
			return nil, err
		}
		items = append(items, &i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
