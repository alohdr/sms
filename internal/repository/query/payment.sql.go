// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.13.0
// source: payment.sql

package query

import (
	"context"
)

const getMakingPayment = `-- name: GetMakingPayment :one
SELECT bank_code, atm, internet_banking, mobile_banking FROM making_payment WHERE bank_code = ?
LIMIT 1
`

type GetMakingPaymentRow struct {
	BankCode        string `json:"bank_code"`
	Atm             string `json:"atm"`
	InternetBanking string `json:"internet_banking"`
	MobileBanking   string `json:"mobile_banking"`
}

func (q *Queries) GetMakingPayment(ctx context.Context, bankCode string) (*GetMakingPaymentRow, error) {
	row := q.db.QueryRowContext(ctx, getMakingPayment, bankCode)
	var i GetMakingPaymentRow
	err := row.Scan(
		&i.BankCode,
		&i.Atm,
		&i.InternetBanking,
		&i.MobileBanking,
	)
	return &i, err
}
