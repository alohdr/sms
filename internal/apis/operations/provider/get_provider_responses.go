// Code generated by go-swagger; DO NOT EDIT.

package provider

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"hanoman-id/xendit-payment/internal/models"
)

// GetProviderOKCode is the HTTP code returned for type GetProviderOK
const GetProviderOKCode int = 200

/*GetProviderOK Success

swagger:response getProviderOK
*/
type GetProviderOK struct {

	/*
	  In: Body
	*/
	Payload *GetProviderOKBody `json:"body,omitempty"`
}

// NewGetProviderOK creates GetProviderOK with default headers values
func NewGetProviderOK() *GetProviderOK {

	return &GetProviderOK{}
}

// WithPayload adds the payload to the get provider o k response
func (o *GetProviderOK) WithPayload(payload *GetProviderOKBody) *GetProviderOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get provider o k response
func (o *GetProviderOK) SetPayload(payload *GetProviderOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetProviderOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetProviderBadRequestCode is the HTTP code returned for type GetProviderBadRequest
const GetProviderBadRequestCode int = 400

/*GetProviderBadRequest Unauthorized

swagger:response getProviderBadRequest
*/
type GetProviderBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetProviderBadRequest creates GetProviderBadRequest with default headers values
func NewGetProviderBadRequest() *GetProviderBadRequest {

	return &GetProviderBadRequest{}
}

// WithPayload adds the payload to the get provider bad request response
func (o *GetProviderBadRequest) WithPayload(payload *models.Error) *GetProviderBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get provider bad request response
func (o *GetProviderBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetProviderBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetProviderUnauthorizedCode is the HTTP code returned for type GetProviderUnauthorized
const GetProviderUnauthorizedCode int = 401

/*GetProviderUnauthorized Unauthorized

swagger:response getProviderUnauthorized
*/
type GetProviderUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetProviderUnauthorized creates GetProviderUnauthorized with default headers values
func NewGetProviderUnauthorized() *GetProviderUnauthorized {

	return &GetProviderUnauthorized{}
}

// WithPayload adds the payload to the get provider unauthorized response
func (o *GetProviderUnauthorized) WithPayload(payload *models.Error) *GetProviderUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get provider unauthorized response
func (o *GetProviderUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetProviderUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetProviderNotFoundCode is the HTTP code returned for type GetProviderNotFound
const GetProviderNotFoundCode int = 404

/*GetProviderNotFound The specified resource was not found

swagger:response getProviderNotFound
*/
type GetProviderNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetProviderNotFound creates GetProviderNotFound with default headers values
func NewGetProviderNotFound() *GetProviderNotFound {

	return &GetProviderNotFound{}
}

// WithPayload adds the payload to the get provider not found response
func (o *GetProviderNotFound) WithPayload(payload *models.Error) *GetProviderNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get provider not found response
func (o *GetProviderNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetProviderNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
