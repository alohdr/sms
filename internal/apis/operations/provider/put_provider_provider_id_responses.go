// Code generated by go-swagger; DO NOT EDIT.

package provider

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"hanoman-id/xendit-payment/internal/models"
)

// PutProviderProviderIDOKCode is the HTTP code returned for type PutProviderProviderIDOK
const PutProviderProviderIDOKCode int = 200

/*PutProviderProviderIDOK Success

swagger:response putProviderProviderIdOK
*/
type PutProviderProviderIDOK struct {

	/*
	  In: Body
	*/
	Payload *PutProviderProviderIDOKBody `json:"body,omitempty"`
}

// NewPutProviderProviderIDOK creates PutProviderProviderIDOK with default headers values
func NewPutProviderProviderIDOK() *PutProviderProviderIDOK {

	return &PutProviderProviderIDOK{}
}

// WithPayload adds the payload to the put provider provider Id o k response
func (o *PutProviderProviderIDOK) WithPayload(payload *PutProviderProviderIDOKBody) *PutProviderProviderIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put provider provider Id o k response
func (o *PutProviderProviderIDOK) SetPayload(payload *PutProviderProviderIDOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutProviderProviderIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutProviderProviderIDBadRequestCode is the HTTP code returned for type PutProviderProviderIDBadRequest
const PutProviderProviderIDBadRequestCode int = 400

/*PutProviderProviderIDBadRequest Unauthorized

swagger:response putProviderProviderIdBadRequest
*/
type PutProviderProviderIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutProviderProviderIDBadRequest creates PutProviderProviderIDBadRequest with default headers values
func NewPutProviderProviderIDBadRequest() *PutProviderProviderIDBadRequest {

	return &PutProviderProviderIDBadRequest{}
}

// WithPayload adds the payload to the put provider provider Id bad request response
func (o *PutProviderProviderIDBadRequest) WithPayload(payload *models.Error) *PutProviderProviderIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put provider provider Id bad request response
func (o *PutProviderProviderIDBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutProviderProviderIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutProviderProviderIDUnauthorizedCode is the HTTP code returned for type PutProviderProviderIDUnauthorized
const PutProviderProviderIDUnauthorizedCode int = 401

/*PutProviderProviderIDUnauthorized Unauthorized

swagger:response putProviderProviderIdUnauthorized
*/
type PutProviderProviderIDUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutProviderProviderIDUnauthorized creates PutProviderProviderIDUnauthorized with default headers values
func NewPutProviderProviderIDUnauthorized() *PutProviderProviderIDUnauthorized {

	return &PutProviderProviderIDUnauthorized{}
}

// WithPayload adds the payload to the put provider provider Id unauthorized response
func (o *PutProviderProviderIDUnauthorized) WithPayload(payload *models.Error) *PutProviderProviderIDUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put provider provider Id unauthorized response
func (o *PutProviderProviderIDUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutProviderProviderIDUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutProviderProviderIDNotFoundCode is the HTTP code returned for type PutProviderProviderIDNotFound
const PutProviderProviderIDNotFoundCode int = 404

/*PutProviderProviderIDNotFound The specified resource was not found

swagger:response putProviderProviderIdNotFound
*/
type PutProviderProviderIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutProviderProviderIDNotFound creates PutProviderProviderIDNotFound with default headers values
func NewPutProviderProviderIDNotFound() *PutProviderProviderIDNotFound {

	return &PutProviderProviderIDNotFound{}
}

// WithPayload adds the payload to the put provider provider Id not found response
func (o *PutProviderProviderIDNotFound) WithPayload(payload *models.Error) *PutProviderProviderIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put provider provider Id not found response
func (o *PutProviderProviderIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutProviderProviderIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
