// Code generated by go-swagger; DO NOT EDIT.

package provider

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"hanoman-id/xendit-payment/internal/models"
)

// PutProviderOKCode is the HTTP code returned for type PutProviderOK
const PutProviderOKCode int = 200

/*PutProviderOK Success

swagger:response putProviderOK
*/
type PutProviderOK struct {

	/*
	  In: Body
	*/
	Payload *PutProviderOKBody `json:"body,omitempty"`
}

// NewPutProviderOK creates PutProviderOK with default headers values
func NewPutProviderOK() *PutProviderOK {

	return &PutProviderOK{}
}

// WithPayload adds the payload to the put provider o k response
func (o *PutProviderOK) WithPayload(payload *PutProviderOKBody) *PutProviderOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put provider o k response
func (o *PutProviderOK) SetPayload(payload *PutProviderOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutProviderOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutProviderBadRequestCode is the HTTP code returned for type PutProviderBadRequest
const PutProviderBadRequestCode int = 400

/*PutProviderBadRequest Unauthorized

swagger:response putProviderBadRequest
*/
type PutProviderBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutProviderBadRequest creates PutProviderBadRequest with default headers values
func NewPutProviderBadRequest() *PutProviderBadRequest {

	return &PutProviderBadRequest{}
}

// WithPayload adds the payload to the put provider bad request response
func (o *PutProviderBadRequest) WithPayload(payload *models.Error) *PutProviderBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put provider bad request response
func (o *PutProviderBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutProviderBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutProviderUnauthorizedCode is the HTTP code returned for type PutProviderUnauthorized
const PutProviderUnauthorizedCode int = 401

/*PutProviderUnauthorized Unauthorized

swagger:response putProviderUnauthorized
*/
type PutProviderUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutProviderUnauthorized creates PutProviderUnauthorized with default headers values
func NewPutProviderUnauthorized() *PutProviderUnauthorized {

	return &PutProviderUnauthorized{}
}

// WithPayload adds the payload to the put provider unauthorized response
func (o *PutProviderUnauthorized) WithPayload(payload *models.Error) *PutProviderUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put provider unauthorized response
func (o *PutProviderUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutProviderUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutProviderNotFoundCode is the HTTP code returned for type PutProviderNotFound
const PutProviderNotFoundCode int = 404

/*PutProviderNotFound The specified resource was not found

swagger:response putProviderNotFound
*/
type PutProviderNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutProviderNotFound creates PutProviderNotFound with default headers values
func NewPutProviderNotFound() *PutProviderNotFound {

	return &PutProviderNotFound{}
}

// WithPayload adds the payload to the put provider not found response
func (o *PutProviderNotFound) WithPayload(payload *models.Error) *PutProviderNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put provider not found response
func (o *PutProviderNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutProviderNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
