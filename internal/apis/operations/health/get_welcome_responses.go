// Code generated by go-swagger; DO NOT EDIT.

package health

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"hanoman-id/xendit-payment/internal/models"
)

// GetWelcomeOKCode is the HTTP code returned for type GetWelcomeOK
const GetWelcomeOKCode int = 200

/*GetWelcomeOK Success

swagger:response getWelcomeOK
*/
type GetWelcomeOK struct {

	/*
	  In: Body
	*/
	Payload *GetWelcomeOKBody `json:"body,omitempty"`
}

// NewGetWelcomeOK creates GetWelcomeOK with default headers values
func NewGetWelcomeOK() *GetWelcomeOK {

	return &GetWelcomeOK{}
}

// WithPayload adds the payload to the get welcome o k response
func (o *GetWelcomeOK) WithPayload(payload *GetWelcomeOKBody) *GetWelcomeOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get welcome o k response
func (o *GetWelcomeOK) SetPayload(payload *GetWelcomeOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWelcomeOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetWelcomeBadRequestCode is the HTTP code returned for type GetWelcomeBadRequest
const GetWelcomeBadRequestCode int = 400

/*GetWelcomeBadRequest Unauthorized

swagger:response getWelcomeBadRequest
*/
type GetWelcomeBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetWelcomeBadRequest creates GetWelcomeBadRequest with default headers values
func NewGetWelcomeBadRequest() *GetWelcomeBadRequest {

	return &GetWelcomeBadRequest{}
}

// WithPayload adds the payload to the get welcome bad request response
func (o *GetWelcomeBadRequest) WithPayload(payload *models.Error) *GetWelcomeBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get welcome bad request response
func (o *GetWelcomeBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWelcomeBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetWelcomeUnauthorizedCode is the HTTP code returned for type GetWelcomeUnauthorized
const GetWelcomeUnauthorizedCode int = 401

/*GetWelcomeUnauthorized Unauthorized

swagger:response getWelcomeUnauthorized
*/
type GetWelcomeUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetWelcomeUnauthorized creates GetWelcomeUnauthorized with default headers values
func NewGetWelcomeUnauthorized() *GetWelcomeUnauthorized {

	return &GetWelcomeUnauthorized{}
}

// WithPayload adds the payload to the get welcome unauthorized response
func (o *GetWelcomeUnauthorized) WithPayload(payload *models.Error) *GetWelcomeUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get welcome unauthorized response
func (o *GetWelcomeUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWelcomeUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetWelcomeNotFoundCode is the HTTP code returned for type GetWelcomeNotFound
const GetWelcomeNotFoundCode int = 404

/*GetWelcomeNotFound The specified resource was not found

swagger:response getWelcomeNotFound
*/
type GetWelcomeNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetWelcomeNotFound creates GetWelcomeNotFound with default headers values
func NewGetWelcomeNotFound() *GetWelcomeNotFound {

	return &GetWelcomeNotFound{}
}

// WithPayload adds the payload to the get welcome not found response
func (o *GetWelcomeNotFound) WithPayload(payload *models.Error) *GetWelcomeNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get welcome not found response
func (o *GetWelcomeNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWelcomeNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
