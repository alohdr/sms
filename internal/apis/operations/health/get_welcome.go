// Code generated by go-swagger; DO NOT EDIT.

package health

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetWelcomeHandlerFunc turns a function with the right signature into a get welcome handler
type GetWelcomeHandlerFunc func(GetWelcomeParams, interface{}) middleware.Responder

// Handle executing the request and returning a response
func (fn GetWelcomeHandlerFunc) Handle(params GetWelcomeParams, principal interface{}) middleware.Responder {
	return fn(params, principal)
}

// GetWelcomeHandler interface for that can handle valid get welcome params
type GetWelcomeHandler interface {
	Handle(GetWelcomeParams, interface{}) middleware.Responder
}

// NewGetWelcome creates a new http.Handler for the get welcome operation
func NewGetWelcome(ctx *middleware.Context, handler GetWelcomeHandler) *GetWelcome {
	return &GetWelcome{Context: ctx, Handler: handler}
}

/* GetWelcome swagger:route GET /welcome Health getWelcome

Health check

Health check endpoint

*/
type GetWelcome struct {
	Context *middleware.Context
	Handler GetWelcomeHandler
}

func (o *GetWelcome) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetWelcomeParams()
	uprinc, aCtx, err := o.Context.Authorize(r, route)
	if err != nil {
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}
	if aCtx != nil {
		*r = *aCtx
	}
	var principal interface{}
	if uprinc != nil {
		principal = uprinc.(interface{}) // this is really a interface{}, I promise
	}

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params, principal) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// GetWelcomeOKBody get welcome o k body
//
// swagger:model GetWelcomeOKBody
type GetWelcomeOKBody struct {

	// success retrieve data
	// Example: app running well
	Message string `json:"message,omitempty"`
}

// Validate validates this get welcome o k body
func (o *GetWelcomeOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get welcome o k body based on context it is used
func (o *GetWelcomeOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetWelcomeOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetWelcomeOKBody) UnmarshalBinary(b []byte) error {
	var res GetWelcomeOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
