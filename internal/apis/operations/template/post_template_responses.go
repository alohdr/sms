// Code generated by go-swagger; DO NOT EDIT.

package template

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"hanoman-id/xendit-payment/internal/models"
)

// PostTemplateOKCode is the HTTP code returned for type PostTemplateOK
const PostTemplateOKCode int = 200

/*PostTemplateOK Success

swagger:response postTemplateOK
*/
type PostTemplateOK struct {

	/*
	  In: Body
	*/
	Payload *PostTemplateOKBody `json:"body,omitempty"`
}

// NewPostTemplateOK creates PostTemplateOK with default headers values
func NewPostTemplateOK() *PostTemplateOK {

	return &PostTemplateOK{}
}

// WithPayload adds the payload to the post template o k response
func (o *PostTemplateOK) WithPayload(payload *PostTemplateOKBody) *PostTemplateOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post template o k response
func (o *PostTemplateOK) SetPayload(payload *PostTemplateOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostTemplateOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostTemplateBadRequestCode is the HTTP code returned for type PostTemplateBadRequest
const PostTemplateBadRequestCode int = 400

/*PostTemplateBadRequest Unauthorized

swagger:response postTemplateBadRequest
*/
type PostTemplateBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostTemplateBadRequest creates PostTemplateBadRequest with default headers values
func NewPostTemplateBadRequest() *PostTemplateBadRequest {

	return &PostTemplateBadRequest{}
}

// WithPayload adds the payload to the post template bad request response
func (o *PostTemplateBadRequest) WithPayload(payload *models.Error) *PostTemplateBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post template bad request response
func (o *PostTemplateBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostTemplateBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostTemplateUnauthorizedCode is the HTTP code returned for type PostTemplateUnauthorized
const PostTemplateUnauthorizedCode int = 401

/*PostTemplateUnauthorized Unauthorized

swagger:response postTemplateUnauthorized
*/
type PostTemplateUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostTemplateUnauthorized creates PostTemplateUnauthorized with default headers values
func NewPostTemplateUnauthorized() *PostTemplateUnauthorized {

	return &PostTemplateUnauthorized{}
}

// WithPayload adds the payload to the post template unauthorized response
func (o *PostTemplateUnauthorized) WithPayload(payload *models.Error) *PostTemplateUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post template unauthorized response
func (o *PostTemplateUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostTemplateUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostTemplateNotFoundCode is the HTTP code returned for type PostTemplateNotFound
const PostTemplateNotFoundCode int = 404

/*PostTemplateNotFound The specified resource was not found

swagger:response postTemplateNotFound
*/
type PostTemplateNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostTemplateNotFound creates PostTemplateNotFound with default headers values
func NewPostTemplateNotFound() *PostTemplateNotFound {

	return &PostTemplateNotFound{}
}

// WithPayload adds the payload to the post template not found response
func (o *PostTemplateNotFound) WithPayload(payload *models.Error) *PostTemplateNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post template not found response
func (o *PostTemplateNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostTemplateNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
