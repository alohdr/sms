// Code generated by go-swagger; DO NOT EDIT.

package template

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PostTemplateHandlerFunc turns a function with the right signature into a post template handler
type PostTemplateHandlerFunc func(PostTemplateParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostTemplateHandlerFunc) Handle(params PostTemplateParams) middleware.Responder {
	return fn(params)
}

// PostTemplateHandler interface for that can handle valid post template params
type PostTemplateHandler interface {
	Handle(PostTemplateParams) middleware.Responder
}

// NewPostTemplate creates a new http.Handler for the post template operation
func NewPostTemplate(ctx *middleware.Context, handler PostTemplateHandler) *PostTemplate {
	return &PostTemplate{Context: ctx, Handler: handler}
}

/* PostTemplate swagger:route POST /template Template postTemplate

Health check

Health check endpoint

*/
type PostTemplate struct {
	Context *middleware.Context
	Handler PostTemplateHandler
}

func (o *PostTemplate) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewPostTemplateParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// PostTemplateOKBody post template o k body
//
// swagger:model PostTemplateOKBody
type PostTemplateOKBody struct {

	// response code
	ResponseCode string `json:"response_code,omitempty"`

	// response data
	ResponseData string `json:"response_data,omitempty"`

	// response messege
	ResponseMessege string `json:"response_messege,omitempty"`
}

// Validate validates this post template o k body
func (o *PostTemplateOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post template o k body based on context it is used
func (o *PostTemplateOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostTemplateOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostTemplateOKBody) UnmarshalBinary(b []byte) error {
	var res PostTemplateOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
