// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"hanoman-id/xendit-payment/internal/models"
)

// PostValidateOtpOKCode is the HTTP code returned for type PostValidateOtpOK
const PostValidateOtpOKCode int = 200

/*PostValidateOtpOK Success

swagger:response postValidateOtpOK
*/
type PostValidateOtpOK struct {

	/*
	  In: Body
	*/
	Payload *PostValidateOtpOKBody `json:"body,omitempty"`
}

// NewPostValidateOtpOK creates PostValidateOtpOK with default headers values
func NewPostValidateOtpOK() *PostValidateOtpOK {

	return &PostValidateOtpOK{}
}

// WithPayload adds the payload to the post validate otp o k response
func (o *PostValidateOtpOK) WithPayload(payload *PostValidateOtpOKBody) *PostValidateOtpOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post validate otp o k response
func (o *PostValidateOtpOK) SetPayload(payload *PostValidateOtpOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostValidateOtpOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostValidateOtpBadRequestCode is the HTTP code returned for type PostValidateOtpBadRequest
const PostValidateOtpBadRequestCode int = 400

/*PostValidateOtpBadRequest Unauthorized

swagger:response postValidateOtpBadRequest
*/
type PostValidateOtpBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostValidateOtpBadRequest creates PostValidateOtpBadRequest with default headers values
func NewPostValidateOtpBadRequest() *PostValidateOtpBadRequest {

	return &PostValidateOtpBadRequest{}
}

// WithPayload adds the payload to the post validate otp bad request response
func (o *PostValidateOtpBadRequest) WithPayload(payload *models.Error) *PostValidateOtpBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post validate otp bad request response
func (o *PostValidateOtpBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostValidateOtpBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostValidateOtpUnauthorizedCode is the HTTP code returned for type PostValidateOtpUnauthorized
const PostValidateOtpUnauthorizedCode int = 401

/*PostValidateOtpUnauthorized Unauthorized

swagger:response postValidateOtpUnauthorized
*/
type PostValidateOtpUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostValidateOtpUnauthorized creates PostValidateOtpUnauthorized with default headers values
func NewPostValidateOtpUnauthorized() *PostValidateOtpUnauthorized {

	return &PostValidateOtpUnauthorized{}
}

// WithPayload adds the payload to the post validate otp unauthorized response
func (o *PostValidateOtpUnauthorized) WithPayload(payload *models.Error) *PostValidateOtpUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post validate otp unauthorized response
func (o *PostValidateOtpUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostValidateOtpUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostValidateOtpNotFoundCode is the HTTP code returned for type PostValidateOtpNotFound
const PostValidateOtpNotFoundCode int = 404

/*PostValidateOtpNotFound The specified resource was not found

swagger:response postValidateOtpNotFound
*/
type PostValidateOtpNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostValidateOtpNotFound creates PostValidateOtpNotFound with default headers values
func NewPostValidateOtpNotFound() *PostValidateOtpNotFound {

	return &PostValidateOtpNotFound{}
}

// WithPayload adds the payload to the post validate otp not found response
func (o *PostValidateOtpNotFound) WithPayload(payload *models.Error) *PostValidateOtpNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post validate otp not found response
func (o *PostValidateOtpNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostValidateOtpNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
